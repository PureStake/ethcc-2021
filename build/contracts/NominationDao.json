{
  "contractName": "NominationDao",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract ParachainStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "update_nomination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unsafe_attempt_to_nominate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract ParachainStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unsafe_attempt_to_nominate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"update_nomination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initialize a new NominationDao dedicated to nominating the given collator target.\"},\"staking()\":{\"notice\":\"The ParachainStaking wrapper at the known pre-compile address. This will be used to make all calls to the underlying staking solution\"},\"target()\":{\"notice\":\"The collator that this DAO is currently nominating\"},\"unsafe_attempt_to_nominate()\":{\"notice\":\"Calls directly into the interface. Assumes the contract has atleast 10 ether so that the nomination will be successful.\"},\"update_nomination()\":{\"notice\":\"Update the on-chain nomination to reflect any recently-contributed nominations.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NominationDAO.sol\":\"NominationDao\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/NominationDAO.sol\":{\"keccak256\":\"0xcde800bfb3a03bcaa3593a9d1236d0d046ff748f71405356e5770bf86a0bdcde\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://85b0b103c56df1d36849107f8c80c37f1ffde668a78a7d1e5a8f99a776033bad\",\"dweb:/ipfs/QmfQiYWCJS96jVoUS1cufBhGFWodTzKXw85JgxLJqCETXp\"]},\"project:/contracts/StakingInterface.sol\":{\"keccak256\":\"0xe52b74849e7f5b4b9229168ceee50bd84e5c45947521b56cdcc7c0751136d264\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://131426f622fe806299af2299537c8c4161631e545f54469132ae0406478a1475\",\"dweb:/ipfs/QmQfkaFEdRwiN3Bz7EqBAqsqFEvQRuxif1swagaxZ1PRsL\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516107e23803806107e2833981810160405281019061003291906100d0565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610100600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014b565b6000815190506100ca81610134565b92915050565b6000602082840312156100e6576100e561012f565b5b60006100f4848285016100bb565b91505092915050565b60006101088261010f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61013d816100fd565b811461014857600080fd5b50565b6106888061015a6000396000f3fe6080604052600436106100435760003560e01c80634cf088d91461004f5780636fd3af441461007a578063d4b8399214610091578063e352e659146100bc5761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b506100646100d3565b6040516100719190610543565b60405180910390f35b34801561008657600080fd5b5061008f6100f9565b005b34801561009d57600080fd5b506100a66101b2565b6040516100b391906104d6565b60405180910390f35b3480156100c857600080fd5b506100d16101d6565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382f2c8df60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16678ac7230489e800006040518363ffffffff1660e01b815260040161017e9291906104f1565b600060405180830381600087803b15801561019857600080fd5b505af11580156101ac573d6000803e3d6000fd5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e5080e7306040518263ffffffff1660e01b815260040161023191906104d6565b60206040518083038186803b15801561024957600080fd5b505afa15801561025d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610281919061044a565b1561033457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634b65c34b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161030191906104d6565b600060405180830381600087803b15801561031b57600080fd5b505af115801561032f573d6000803e3d6000fd5b505050505b674563918244f400004711156103f857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382f2c8df60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16476040518363ffffffff1660e01b81526004016103c192919061051a565b600060405180830381600087803b1580156103db57600080fd5b505af11580156103ef573d6000803e3d6000fd5b50505050610433565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042a9061055e565b60405180910390fd5b565b6000815190506104448161063b565b92915050565b6000602082840312156104605761045f61060d565b5b600061046e84828501610435565b91505092915050565b6104808161058f565b82525050565b61048f816105d7565b82525050565b61049e816105fb565b82525050565b60006104b160128361057e565b91506104bc82610612565b602082019050919050565b6104d0816105cd565b82525050565b60006020820190506104eb6000830184610477565b92915050565b60006040820190506105066000830185610477565b6105136020830184610495565b9392505050565b600060408201905061052f6000830185610477565b61053c60208301846104c7565b9392505050565b60006020820190506105586000830184610486565b92915050565b60006020820190508181036000830152610577816104a4565b9050919050565b600082825260208201905092915050565b600061059a826105ad565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105e2826105e9565b9050919050565b60006105f4826105ad565b9050919050565b6000610606826105cd565b9050919050565b600080fd5b7f4e6f6d696e6174696f6e42656c6f774d696e0000000000000000000000000000600082015250565b610644816105a1565b811461064f57600080fd5b5056fea26469706673582212202128d713e9fc27df3b64bb11abc6f7ab0eaa658f96cecf3d01b2aa88c0edef7464736f6c63430008060033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80634cf088d91461004f5780636fd3af441461007a578063d4b8399214610091578063e352e659146100bc5761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b506100646100d3565b6040516100719190610543565b60405180910390f35b34801561008657600080fd5b5061008f6100f9565b005b34801561009d57600080fd5b506100a66101b2565b6040516100b391906104d6565b60405180910390f35b3480156100c857600080fd5b506100d16101d6565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382f2c8df60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16678ac7230489e800006040518363ffffffff1660e01b815260040161017e9291906104f1565b600060405180830381600087803b15801561019857600080fd5b505af11580156101ac573d6000803e3d6000fd5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e5080e7306040518263ffffffff1660e01b815260040161023191906104d6565b60206040518083038186803b15801561024957600080fd5b505afa15801561025d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610281919061044a565b1561033457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634b65c34b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161030191906104d6565b600060405180830381600087803b15801561031b57600080fd5b505af115801561032f573d6000803e3d6000fd5b505050505b674563918244f400004711156103f857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382f2c8df60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16476040518363ffffffff1660e01b81526004016103c192919061051a565b600060405180830381600087803b1580156103db57600080fd5b505af11580156103ef573d6000803e3d6000fd5b50505050610433565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042a9061055e565b60405180910390fd5b565b6000815190506104448161063b565b92915050565b6000602082840312156104605761045f61060d565b5b600061046e84828501610435565b91505092915050565b6104808161058f565b82525050565b61048f816105d7565b82525050565b61049e816105fb565b82525050565b60006104b160128361057e565b91506104bc82610612565b602082019050919050565b6104d0816105cd565b82525050565b60006020820190506104eb6000830184610477565b92915050565b60006040820190506105066000830185610477565b6105136020830184610495565b9392505050565b600060408201905061052f6000830185610477565b61053c60208301846104c7565b9392505050565b60006020820190506105586000830184610486565b92915050565b60006020820190508181036000830152610577816104a4565b9050919050565b600082825260208201905092915050565b600061059a826105ad565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105e2826105e9565b9050919050565b60006105f4826105ad565b9050919050565b6000610606826105cd565b9050919050565b600080fd5b7f4e6f6d696e6174696f6e42656c6f774d696e0000000000000000000000000000600082015250565b610644816105a1565b811461064f57600080fd5b5056fea26469706673582212202128d713e9fc27df3b64bb11abc6f7ab0eaa658f96cecf3d01b2aa88c0edef7464736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:4",
                "type": ""
              }
            ],
            "src": "7:143:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:274:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "281:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "372:128:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "387:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "391:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "416:74:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "462:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "473:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "458:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "458:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "482:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "426:31:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "426:64:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "416:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:4",
                "type": ""
              }
            ],
            "src": "156:351:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "553:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "563:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "579:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "573:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "573:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "563:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "546:6:4",
                "type": ""
              }
            ],
            "src": "513:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "639:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "649:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "678:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "660:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "649:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "621:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "631:7:4",
                "type": ""
              }
            ],
            "src": "594:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "751:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "766:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "773:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "762:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "751:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "723:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "733:7:4",
                "type": ""
              }
            ],
            "src": "696:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "917:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "934:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "927:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "927:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "927:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "828:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1057:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1060:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1050:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1050:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "951:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1117:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1174:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1183:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1186:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1176:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1176:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1176:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1140:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1165:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1147:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1137:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1137:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1127:2:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1110:5:4",
                "type": ""
              }
            ],
            "src": "1074:122:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4833:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:77:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "92:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "108:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "108:30:4"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:4",
                "type": ""
              }
            ],
            "src": "7:137:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "224:271:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "270:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "272:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "272:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "272:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "245:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "254:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "241:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "241:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "266:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "237:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "234:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "363:125:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "378:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "392:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "382:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "407:71:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "450:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "461:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "446:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "446:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "470:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "417:28:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "417:61:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "407:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "194:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "205:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "217:6:4",
                "type": ""
              }
            ],
            "src": "150:345:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "566:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "583:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "606:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "588:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "588:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "576:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "576:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "554:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "561:3:4",
                "type": ""
              }
            ],
            "src": "501:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "714:90:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "731:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "791:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ParachainStaking_$340_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "736:54:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "736:61:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "724:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:74:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "724:74:4"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ParachainStaking_$340_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "702:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "709:3:4",
                "type": ""
              }
            ],
            "src": "625:179:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "902:93:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "919:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "982:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_10000000000000000000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "924:57:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:64:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "912:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "912:77:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "912:77:4"
                }
              ]
            },
            "name": "abi_encode_t_rational_10000000000000000000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "890:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "897:3:4",
                "type": ""
              }
            ],
            "src": "810:185:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1147:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1157:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1223:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1228:2:4",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1164:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1164:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1157:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1329:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08",
                      "nodeType": "YulIdentifier",
                      "src": "1240:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1240:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1342:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1353:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1358:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1349:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1349:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1342:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1135:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1143:3:4",
                "type": ""
              }
            ],
            "src": "1001:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1438:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1455:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1478:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1460:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1460:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1448:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1448:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1448:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1426:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1433:3:4",
                "type": ""
              }
            ],
            "src": "1373:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1595:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1605:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1617:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1628:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1613:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1613:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1605:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1685:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1698:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1709:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1694:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1694:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1641:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1641:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1641:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1567:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1579:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1590:4:4",
                "type": ""
              }
            ],
            "src": "1497:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1878:233:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1888:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1900:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1911:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1896:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1896:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1888:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1968:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1981:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1992:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1977:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1977:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1924:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1924:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1924:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2076:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2089:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2100:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2085:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2085:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_10000000000000000000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2005:70:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2005:99:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2005:99:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_10000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1842:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1854:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1862:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1873:4:4",
                "type": ""
              }
            ],
            "src": "1725:386:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2243:206:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2253:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2265:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2276:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2261:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2261:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2253:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2333:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2346:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2357:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2342:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2342:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2289:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2289:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2289:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2414:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2427:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2438:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2423:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2423:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2370:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2370:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2207:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2219:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2227:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2238:4:4",
                "type": ""
              }
            ],
            "src": "2117:332:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2577:148:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2587:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2599:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2610:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2595:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2595:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2587:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2691:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2704:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2715:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2700:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2700:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ParachainStaking_$340_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2623:67:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2623:95:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2623:95:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ParachainStaking_$340__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2549:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2561:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2572:4:4",
                "type": ""
              }
            ],
            "src": "2455:270:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2902:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2912:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2924:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2935:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2920:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2920:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2912:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2959:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2970:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2955:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2955:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2978:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2984:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2974:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2974:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2948:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2948:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2948:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3004:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3138:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3012:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3012:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3004:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2882:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2897:4:4",
                "type": ""
              }
            ],
            "src": "2731:419:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3196:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3206:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3222:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3216:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3216:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "3206:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3189:6:4",
                "type": ""
              }
            ],
            "src": "3156:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3333:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3350:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3355:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3343:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3343:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3343:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3371:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3390:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3395:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3386:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3386:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3371:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3305:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3310:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3321:11:4",
                "type": ""
              }
            ],
            "src": "3237:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3457:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3467:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3496:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3478:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3478:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3467:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3439:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3449:7:4",
                "type": ""
              }
            ],
            "src": "3412:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3556:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3566:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3591:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3584:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3584:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3577:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3577:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3566:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3538:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3548:7:4",
                "type": ""
              }
            ],
            "src": "3514:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3655:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3665:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3680:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3687:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3676:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3676:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3665:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3637:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3647:7:4",
                "type": ""
              }
            ],
            "src": "3610:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3787:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3797:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3808:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3797:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3769:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3779:7:4",
                "type": ""
              }
            ],
            "src": "3742:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3909:90:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3919:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3987:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ParachainStaking_$340_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3932:54:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3932:61:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3919:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ParachainStaking_$340_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3889:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3899:9:4",
                "type": ""
              }
            ],
            "src": "3825:174:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4089:53:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4099:37:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4130:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4112:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4112:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4099:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ParachainStaking_$340_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4069:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4079:9:4",
                "type": ""
              }
            ],
            "src": "4005:137:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4235:53:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4245:37:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4276:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4258:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4258:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4245:9:4"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_10000000000000000000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4215:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4225:9:4",
                "type": ""
              }
            ],
            "src": "4148:140:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4383:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4400:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4403:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4393:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4393:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4393:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "4294:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4506:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4523:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4526:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4516:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4516:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4516:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "4417:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4646:62:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4668:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4676:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4664:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4664:14:4"
                      },
                      {
                        "hexValue": "4e6f6d696e6174696f6e42656c6f774d696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4680:20:4",
                        "type": "",
                        "value": "NominationBelowMin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4657:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4657:44:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4657:44:4"
                }
              ]
            },
            "name": "store_literal_in_memory_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4638:6:4",
                "type": ""
              }
            ],
            "src": "4540:168:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4754:76:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4808:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4817:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4820:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4810:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4810:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4810:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4777:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4799:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "4784:14:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4784:21:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4774:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4774:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4767:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4767:40:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4764:2:4"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4747:5:4",
                "type": ""
              }
            ],
            "src": "4714:116:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ParachainStaking_$340_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ParachainStaking_$340_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_10000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_10000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_10000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_10000000000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ParachainStaking_$340__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ParachainStaking_$340_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ParachainStaking_$340_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ParachainStaking_$340_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ParachainStaking_$340_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_rational_10000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08(memPtr) {\n\n        mstore(add(memPtr, 0), \"NominationBelowMin\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "179:1959:1:-:0;;;670:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;717:7;708:6;;:16;;;;;;;;;;;;;;;;;;844:42;817:7;;:70;;;;;;;;;;;;;;;;;;670:223;179:1959;;7:143:4;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;281:79;;:::i;:::-;243:2;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;233:274;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;639:51;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;741:81;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:2;;1186:1;1183;1176:12;1127:2;1117:79;:::o;179:1959:1:-;;;;;;;",
  "deployedSourceMap": "179:1959:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;545:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1608:94;;;;;;;;;;;;;:::i;:::-;;371:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;984:486;;;;;;;;;;;;;:::i;:::-;;545:31;;;;;;;;;;;;;:::o;1608:94::-;1662:7;;;;;;;;;;;:16;;;1679:6;;;;;;;;;;1687:8;1662:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1608:94::o;371:21::-;;;;;;;;;;;;:::o;984:486::-;1116:7;;;;;;;;;;;:20;;;1145:4;1116:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1112:97;;;1166:7;;;;;;;;;;;:25;;;1192:6;;;;;;;;;;1166:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:97;301:7;1297:21;:39;1293:172;;;1351:7;;;;;;;;;;;:16;;;1368:6;;;;;;;;;;1376:21;1351:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:172;;;1427:28;;;;;;;;;;:::i;:::-;;;;;;;;1293:172;984:486::o;7:137:4:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:345::-;217:6;266:2;254:9;245:7;241:23;237:32;234:2;;;272:79;;:::i;:::-;234:2;392:1;417:61;470:7;461:6;450:9;446:22;417:61;:::i;:::-;407:71;;363:125;224:271;;;;:::o;501:118::-;588:24;606:5;588:24;:::i;:::-;583:3;576:37;566:53;;:::o;625:179::-;736:61;791:5;736:61;:::i;:::-;731:3;724:74;714:90;;:::o;810:185::-;924:64;982:5;924:64;:::i;:::-;919:3;912:77;902:93;;:::o;1001:366::-;1143:3;1164:67;1228:2;1223:3;1164:67;:::i;:::-;1157:74;;1240:93;1329:3;1240:93;:::i;:::-;1358:2;1353:3;1349:12;1342:19;;1147:220;;;:::o;1373:118::-;1460:24;1478:5;1460:24;:::i;:::-;1455:3;1448:37;1438:53;;:::o;1497:222::-;1590:4;1628:2;1617:9;1613:18;1605:26;;1641:71;1709:1;1698:9;1694:17;1685:6;1641:71;:::i;:::-;1595:124;;;;:::o;1725:386::-;1873:4;1911:2;1900:9;1896:18;1888:26;;1924:71;1992:1;1981:9;1977:17;1968:6;1924:71;:::i;:::-;2005:99;2100:2;2089:9;2085:18;2076:6;2005:99;:::i;:::-;1878:233;;;;;:::o;2117:332::-;2238:4;2276:2;2265:9;2261:18;2253:26;;2289:71;2357:1;2346:9;2342:17;2333:6;2289:71;:::i;:::-;2370:72;2438:2;2427:9;2423:18;2414:6;2370:72;:::i;:::-;2243:206;;;;;:::o;2455:270::-;2572:4;2610:2;2599:9;2595:18;2587:26;;2623:95;2715:1;2704:9;2700:17;2691:6;2623:95;:::i;:::-;2577:148;;;;:::o;2731:419::-;2897:4;2935:2;2924:9;2920:18;2912:26;;2984:9;2978:4;2974:20;2970:1;2959:9;2955:17;2948:47;3012:131;3138:4;3012:131;:::i;:::-;3004:139;;2902:248;;;:::o;3237:169::-;3321:11;3355:6;3350:3;3343:19;3395:4;3390:3;3386:14;3371:29;;3333:73;;;;:::o;3412:96::-;3449:7;3478:24;3496:5;3478:24;:::i;:::-;3467:35;;3457:51;;;:::o;3514:90::-;3548:7;3591:5;3584:13;3577:21;3566:32;;3556:48;;;:::o;3610:126::-;3647:7;3687:42;3680:5;3676:54;3665:65;;3655:81;;;:::o;3742:77::-;3779:7;3808:5;3797:16;;3787:32;;;:::o;3825:174::-;3899:9;3932:61;3987:5;3932:61;:::i;:::-;3919:74;;3909:90;;;:::o;4005:137::-;4079:9;4112:24;4130:5;4112:24;:::i;:::-;4099:37;;4089:53;;;:::o;4148:140::-;4225:9;4258:24;4276:5;4258:24;:::i;:::-;4245:37;;4235:53;;;:::o;4417:117::-;4526:1;4523;4516:12;4540:168;4680:20;4676:1;4668:6;4664:14;4657:44;4646:62;:::o;4714:116::-;4784:21;4799:5;4784:21;:::i;:::-;4777:5;4774:32;4764:2;;4820:1;4817;4810:12;4764:2;4754:76;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\n// This is a PoC to use the staking precompile wrapper as a Solidity developer.\npragma solidity >=0.8.0;\nimport \"./StakingInterface.sol\";\ncontract NominationDao {\n   // TODO Our interface should have an accessor for this.\n   uint256 constant MinNominatorStk = 5 ether;\n   /// The collator that this DAO is currently nominating\n   address public target;\n   /// The ParachainStaking wrapper at the known pre-compile address. This will be used to make\n   /// all calls to the underlying staking solution\n   ParachainStaking public staking;\n   /// Initialize a new NominationDao dedicated to nominating the given collator target.\n   constructor(address _target) {\n       target = _target;\n       // This is the well-known address of Moonbeam's parachain staking precompile\n       staking = ParachainStaking(0x0000000000000000000000000000000000000100);\n   }\n   /// Update the on-chain nomination to reflect any recently-contributed nominations.\n   function update_nomination() public {\n       // If we are already nominating, we need to remove the old nomination first\n       if (staking.is_nominator(address(this))) {\n           staking.revoke_nomination(target);\n       }\n       // If we have enough funds to nominate, we should start a nomination\n       if (address(this).balance > MinNominatorStk) {\n           staking.nominate(target, address(this).balance);\n       } else {\n           revert(\"NominationBelowMin\");\n       }\n   }\n   /// Calls directly into the interface.\n   /// Assumes the contract has atleast 10 ether so that the nomination will be successful.\n   function unsafe_attempt_to_nominate() public {\n       staking.nominate(target, 10 ether);\n   }\n   // We need a public receive function to accept ether donations as direct transfers\n   // https://blog.soliditylang.org/2020/03/26/fallback-receive-split/\n   receive() external payable {\n       // It would be nice to call update_nomination here so it happens automatically.\n       // but there is very little gas available when just sending a normal transfer.\n       // So instead we rely on manually calling update_nomination\n   }\n}\n\n",
  "sourcePath": "/Users/antoineestienne/GitHubRepo/ethcc-2021/contracts/NominationDAO.sol",
  "ast": {
    "absolutePath": "project:/contracts/NominationDAO.sol",
    "exportedSymbols": {
      "NominationDao": [
        128
      ],
      "ParachainStaking": [
        340
      ]
    },
    "id": 129,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "121:24:1"
      },
      {
        "absolutePath": "project:/contracts/StakingInterface.sol",
        "file": "./StakingInterface.sol",
        "id": 39,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 129,
        "sourceUnit": 341,
        "src": "146:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 128,
        "linearizedBaseContracts": [
          128
        ],
        "name": "NominationDao",
        "nameLocation": "188:13:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 42,
            "mutability": "constant",
            "name": "MinNominatorStk",
            "nameLocation": "283:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 128,
            "src": "266:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "301:7:1",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                "typeString": "int_const 5000000000000000000"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "313:54:1",
              "text": "The collator that this DAO is currently nominating"
            },
            "functionSelector": "d4b83992",
            "id": 45,
            "mutability": "mutable",
            "name": "target",
            "nameLocation": "386:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 128,
            "src": "371:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "397:144:1",
              "text": "The ParachainStaking wrapper at the known pre-compile address. This will be used to make\n all calls to the underlying staking solution"
            },
            "functionSelector": "4cf088d9",
            "id": 49,
            "mutability": "mutable",
            "name": "staking",
            "nameLocation": "569:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 128,
            "src": "545:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ParachainStaking_$340",
              "typeString": "contract ParachainStaking"
            },
            "typeName": {
              "id": 48,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47,
                "name": "ParachainStaking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 340,
                "src": "545:16:1"
              },
              "referencedDeclaration": 340,
              "src": "545:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ParachainStaking_$340",
                "typeString": "contract ParachainStaking"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "699:194:1",
              "statements": [
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "708:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "717:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "708:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "708:16:1"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "817:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ParachainStaking_$340",
                        "typeString": "contract ParachainStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030313030",
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "844:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x0000000000000000000000000000000000000100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 60,
                        "name": "ParachainStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "827:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ParachainStaking_$340_$",
                          "typeString": "type(contract ParachainStaking)"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "827:60:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ParachainStaking_$340",
                        "typeString": "contract ParachainStaking"
                      }
                    },
                    "src": "817:70:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ParachainStaking_$340",
                      "typeString": "contract ParachainStaking"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "817:70:1"
                }
              ]
            },
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "581:85:1",
              "text": "Initialize a new NominationDao dedicated to nominating the given collator target."
            },
            "id": 66,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "690:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "682:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:17:1"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "699:0:1"
            },
            "scope": 128,
            "src": "670:223:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1020:450:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1145:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NominationDao_$128",
                              "typeString": "contract NominationDao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NominationDao_$128",
                              "typeString": "contract NominationDao"
                            }
                          ],
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1137:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 72,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1137:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1137:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 70,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1116:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ParachainStaking_$340",
                          "typeString": "contract ParachainStaking"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "is_nominator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 245,
                      "src": "1116:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84,
                  "nodeType": "IfStatement",
                  "src": "1112:97:1",
                  "trueBody": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1153:56:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1192:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 77,
                              "name": "staking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "1166:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ParachainStaking_$340",
                                "typeString": "contract ParachainStaking"
                              }
                            },
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revoke_nomination",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 323,
                            "src": "1166:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1166:33:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82,
                        "nodeType": "ExpressionStatement",
                        "src": "1166:33:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 87,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1305:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NominationDao_$128",
                              "typeString": "contract NominationDao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NominationDao_$128",
                              "typeString": "contract NominationDao"
                            }
                          ],
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1297:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1297:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1297:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1297:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 90,
                      "name": "MinNominatorStk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1321:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1297:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 108,
                    "nodeType": "Block",
                    "src": "1414:51:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4e6f6d696e6174696f6e42656c6f774d696e",
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1434:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08",
                                "typeString": "literal_string \"NominationBelowMin\""
                              },
                              "value": "NominationBelowMin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08",
                                "typeString": "literal_string \"NominationBelowMin\""
                              }
                            ],
                            "id": 104,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1427:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1427:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 107,
                        "nodeType": "ExpressionStatement",
                        "src": "1427:28:1"
                      }
                    ]
                  },
                  "id": 109,
                  "nodeType": "IfStatement",
                  "src": "1293:172:1",
                  "trueBody": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "1338:70:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 95,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1368:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 98,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "1384:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NominationDao_$128",
                                      "typeString": "contract NominationDao"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NominationDao_$128",
                                      "typeString": "contract NominationDao"
                                    }
                                  ],
                                  "id": 97,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1376:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 96,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1376:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 99,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1376:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "1376:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 92,
                              "name": "staking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "1351:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ParachainStaking_$340",
                                "typeString": "contract ParachainStaking"
                              }
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nominate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 313,
                            "src": "1351:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1351:47:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "1351:47:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "897:83:1",
              "text": "Update the on-chain nomination to reflect any recently-contributed nominations."
            },
            "functionSelector": "e352e659",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update_nomination",
            "nameLocation": "993:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1010:2:1"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:0:1"
            },
            "scope": 128,
            "src": "984:486:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1653:49:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1679:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1687:8:1",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 115,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1662:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ParachainStaking_$340",
                          "typeString": "contract ParachainStaking"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nominate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 313,
                      "src": "1662:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1662:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:34:1"
                }
              ]
            },
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "1474:130:1",
              "text": "Calls directly into the interface.\n Assumes the contract has atleast 10 ether so that the nomination will be successful."
            },
            "functionSelector": "6fd3af44",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsafe_attempt_to_nominate",
            "nameLocation": "1617:26:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:2:1"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1653:0:1"
            },
            "scope": 128,
            "src": "1608:94:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1890:246:1",
              "statements": []
            },
            "id": 127,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1870:2:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:0:1"
            },
            "scope": 128,
            "src": "1863:273:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 129,
        "src": "179:1959:1",
        "usedErrors": []
      }
    ],
    "src": "121:2019:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/NominationDAO.sol",
    "exportedSymbols": {
      "NominationDao": [
        128
      ],
      "ParachainStaking": [
        340
      ]
    },
    "id": 129,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "121:24:1"
      },
      {
        "absolutePath": "project:/contracts/StakingInterface.sol",
        "file": "./StakingInterface.sol",
        "id": 39,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 129,
        "sourceUnit": 341,
        "src": "146:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 128,
        "linearizedBaseContracts": [
          128
        ],
        "name": "NominationDao",
        "nameLocation": "188:13:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 42,
            "mutability": "constant",
            "name": "MinNominatorStk",
            "nameLocation": "283:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 128,
            "src": "266:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "301:7:1",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                "typeString": "int_const 5000000000000000000"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "313:54:1",
              "text": "The collator that this DAO is currently nominating"
            },
            "functionSelector": "d4b83992",
            "id": 45,
            "mutability": "mutable",
            "name": "target",
            "nameLocation": "386:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 128,
            "src": "371:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "397:144:1",
              "text": "The ParachainStaking wrapper at the known pre-compile address. This will be used to make\n all calls to the underlying staking solution"
            },
            "functionSelector": "4cf088d9",
            "id": 49,
            "mutability": "mutable",
            "name": "staking",
            "nameLocation": "569:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 128,
            "src": "545:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ParachainStaking_$340",
              "typeString": "contract ParachainStaking"
            },
            "typeName": {
              "id": 48,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47,
                "name": "ParachainStaking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 340,
                "src": "545:16:1"
              },
              "referencedDeclaration": 340,
              "src": "545:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ParachainStaking_$340",
                "typeString": "contract ParachainStaking"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "699:194:1",
              "statements": [
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "708:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "717:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "708:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "708:16:1"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "817:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ParachainStaking_$340",
                        "typeString": "contract ParachainStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030313030",
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "844:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x0000000000000000000000000000000000000100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 60,
                        "name": "ParachainStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "827:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ParachainStaking_$340_$",
                          "typeString": "type(contract ParachainStaking)"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "827:60:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ParachainStaking_$340",
                        "typeString": "contract ParachainStaking"
                      }
                    },
                    "src": "817:70:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ParachainStaking_$340",
                      "typeString": "contract ParachainStaking"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "817:70:1"
                }
              ]
            },
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "581:85:1",
              "text": "Initialize a new NominationDao dedicated to nominating the given collator target."
            },
            "id": 66,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "690:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "682:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:17:1"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "699:0:1"
            },
            "scope": 128,
            "src": "670:223:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1020:450:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1145:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NominationDao_$128",
                              "typeString": "contract NominationDao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NominationDao_$128",
                              "typeString": "contract NominationDao"
                            }
                          ],
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1137:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 72,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1137:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1137:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 70,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1116:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ParachainStaking_$340",
                          "typeString": "contract ParachainStaking"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "is_nominator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 245,
                      "src": "1116:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1116:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84,
                  "nodeType": "IfStatement",
                  "src": "1112:97:1",
                  "trueBody": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1153:56:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1192:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 77,
                              "name": "staking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "1166:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ParachainStaking_$340",
                                "typeString": "contract ParachainStaking"
                              }
                            },
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "revoke_nomination",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 323,
                            "src": "1166:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1166:33:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82,
                        "nodeType": "ExpressionStatement",
                        "src": "1166:33:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 87,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1305:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NominationDao_$128",
                              "typeString": "contract NominationDao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NominationDao_$128",
                              "typeString": "contract NominationDao"
                            }
                          ],
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1297:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1297:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1297:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1297:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 90,
                      "name": "MinNominatorStk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1321:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1297:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 108,
                    "nodeType": "Block",
                    "src": "1414:51:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4e6f6d696e6174696f6e42656c6f774d696e",
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1434:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08",
                                "typeString": "literal_string \"NominationBelowMin\""
                              },
                              "value": "NominationBelowMin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f1964c342e1966d81ca92344e506b268f372b39c27b06274e6dfbc31775a0a08",
                                "typeString": "literal_string \"NominationBelowMin\""
                              }
                            ],
                            "id": 104,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "1427:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1427:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 107,
                        "nodeType": "ExpressionStatement",
                        "src": "1427:28:1"
                      }
                    ]
                  },
                  "id": 109,
                  "nodeType": "IfStatement",
                  "src": "1293:172:1",
                  "trueBody": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "1338:70:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 95,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45,
                              "src": "1368:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 98,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "1384:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NominationDao_$128",
                                      "typeString": "contract NominationDao"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NominationDao_$128",
                                      "typeString": "contract NominationDao"
                                    }
                                  ],
                                  "id": 97,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1376:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 96,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1376:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 99,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1376:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "1376:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 92,
                              "name": "staking",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "1351:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ParachainStaking_$340",
                                "typeString": "contract ParachainStaking"
                              }
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nominate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 313,
                            "src": "1351:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1351:47:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "ExpressionStatement",
                        "src": "1351:47:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "897:83:1",
              "text": "Update the on-chain nomination to reflect any recently-contributed nominations."
            },
            "functionSelector": "e352e659",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update_nomination",
            "nameLocation": "993:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1010:2:1"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:0:1"
            },
            "scope": 128,
            "src": "984:486:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1653:49:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 118,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1679:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1687:8:1",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 115,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1662:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ParachainStaking_$340",
                          "typeString": "contract ParachainStaking"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nominate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 313,
                      "src": "1662:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1662:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:34:1"
                }
              ]
            },
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "1474:130:1",
              "text": "Calls directly into the interface.\n Assumes the contract has atleast 10 ether so that the nomination will be successful."
            },
            "functionSelector": "6fd3af44",
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsafe_attempt_to_nominate",
            "nameLocation": "1617:26:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:2:1"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1653:0:1"
            },
            "scope": 128,
            "src": "1608:94:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1890:246:1",
              "statements": []
            },
            "id": 127,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1870:2:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:0:1"
            },
            "scope": 128,
            "src": "1863:273:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 129,
        "src": "179:1959:1",
        "usedErrors": []
      }
    ],
    "src": "121:2019:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "1281": {
      "events": {},
      "links": {},
      "address": "0x3ed62137c5DB927cb137c26455969116BF0c23Cb",
      "transactionHash": "0x1afe787f3805ccb11a0239b904dba7a266e5f96a5d353a2b9bc3f8f4ebb6e237"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-15T13:02:43.175Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Initialize a new NominationDao dedicated to nominating the given collator target."
      },
      "staking()": {
        "notice": "The ParachainStaking wrapper at the known pre-compile address. This will be used to make all calls to the underlying staking solution"
      },
      "target()": {
        "notice": "The collator that this DAO is currently nominating"
      },
      "unsafe_attempt_to_nominate()": {
        "notice": "Calls directly into the interface. Assumes the contract has atleast 10 ether so that the nomination will be successful."
      },
      "update_nomination()": {
        "notice": "Update the on-chain nomination to reflect any recently-contributed nominations."
      }
    },
    "version": 1
  }
}